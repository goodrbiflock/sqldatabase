SELECT
  num,
  transaction_id,
  channel,
  customer_name,
  type,
  "Date",
  status,
  sum(quantity) as total_quantity,
  sum(revenue) as total_revenue,
  sum(margin) as total_margin
from
(
with channel as(
  SELECT
    order_id id,
    value channel
 FROM public.fact_netsuite_order_custom_fields 
 where field_id = 1628
 ),num as(
  SELECT
    order_id id,
    value num
 FROM public.fact_netsuite_order_custom_fields 
 where field_id = 1650
 )
  SELECT 
    num,
    ord.transaction_id,
    channel,
    customer_id,
    customer_name,
    ord.type,
    ord.billing_state,
    convert_timezone('UTC','America/Los_Angeles',ord."timestamp") as "Date",
    ord.status,
		prod.name,
		prod.item_id,
		items.quantity,
		case 
		  when ord.discount is not NULL and ord.subtotal !=0
		  then items.amount+((items.amount/ord.subtotal)*ord.discount)
		  else items.amount
		  end as revenue,
		prod.average_cost,
		(revenue-(items.quantity*prod.average_cost)) as margin
		
 FROM public.fact_netsuite_orders ord
 left outer join public.fact_netsuite_order_items items on items.order_id = ord.order_id
 left outer join public.fact_netsuite_products prod on prod.product_id = items.order_item_id
 left outer join channel on channel.id=ord.order_id
 left outer join num on num.id=ord.order_id
 where ord.type in ('SalesOrder','Invoice','PurchaseOrder')
  and channel='Key Account'
  and "Date" BETWEEN  '{{start_date}}' and  '{{end_date}}'
  and customer_id in ({{key_account}})
  -- and item_id in ({{sku_choice}})
  and ord.billing_state in ({{state_choice}})
)
group by num,transaction_id,channel,customer_name,customer_id, type,"Date",status
order by num asc

{% form %}

start_date:
  type: date 
  default: '2023-01-01'

end_date:
  type: date 
  default: '2023-12-31'
  
{% endform %}